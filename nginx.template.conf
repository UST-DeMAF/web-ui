worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    gzip on;
    gzip_vary on;
    gzip_static on;

    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;

    proxy_buffering off;
    proxy_request_buffering off;
    proxy_max_temp_file_size 0;

    resolver 127.0.0.11;
    keepalive_timeout 65;
    client_max_body_size 0;

    server {
        listen 80 default_server;
        listen [::]:80;

        server_name _;

        set $analysismanager '${DEMAF_ANALYSIS_MANAGER_URL}';
        set $winery '${DEMAF_WINERY_URL}';

        sub_filter_types *;
        sub_filter_once off;

        root /app/dist;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location ~ ^/(winery)$ {
            return 302 $uri/;
        }

        location /analysismanager/ {
            proxy_pass http://analysismanager:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~ ^/(upload|upload-multiple|tadms)(/.*)?$ {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /winery {
            rewrite ^ $request_uri;
            rewrite ^/winery(/.*)$ $1 break;
            proxy_pass http://$winery$uri;
            proxy_redirect http://$winery http://$host/winery;
            sub_filter '/winery' '/winery/winery';

            location ~ ^/winery/winery/git$ {
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
            }
        }
    }
}